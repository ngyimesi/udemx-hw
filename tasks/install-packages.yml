---
- name: Install basic dependencies
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - lsb-release
      - gnupg
      - curl
    state: present
    update_cache: true

- name: Add docker repository key
  apt_key:
    url: "https://download.docker.com/linux/{{ ansible_os_family | lower }}/gpg"
    state: present

- name: Get DEB architecture
  shell: dpkg --print-architecture
  register: deb_architecture

- name: Set default distribution values
  set_fact:
    distribution: "{{ ansible_distribution }}"
    distribution_release: "{{ ansible_distribution_release }}"
  when: distribution is not defined and distribution_release is not defined

- name: Add docker repository into sources list
  apt_repository:
    repo: "deb [arch={{ deb_architecture.stdout }}] https://download.docker.com/linux/{{ distribution | lower }} {{ distribution_release }} stable"
    state: present
    filename: docker

- name: Add adoptium repository key
  apt_key:
    url: "https://packages.adoptium.net/artifactory/api/gpg/key/public"
    state: present

- name: Add adoptium repository
  apt_repository:
    repo: "deb arch={{ deb_architecture.stdout }}] https://packages.adoptium.net/artifactory/deb {{ distribution_release }} main"
    state: present
    filename: docker

- name: Install required packages
  apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose
      - docker-compose-plugin
      - sudo
      - mc
      - htop
      - vim
      - fail2ban
      - iptables
      - temurin-8-jdk
      - openjdk-11-jdk
      - git
    state: present
    update_cache: true

- name: Set alternative openjdk for javac
  alternatives:
    name: javac
    path: "/usr/lib/jvm/temurin-8-jdk-amd64/bin/javac"
    link: "/usr/bin/javac"

